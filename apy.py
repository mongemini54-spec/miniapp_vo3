import streamlit as st
import os
from openai import OpenAI

# R√©cup√©rer la cl√© API depuis les secrets Streamlit
api_key = os.getenv("GEMINI_API_KEY")

# V√©rification rapide de la cl√© API
if not api_key:
    st.error("‚ùå Cl√© API non trouv√©e. Assure-toi que GEMINI_API_KEY est configur√© dans Secrets.")
    st.stop()  # arr√™te l'ex√©cution si la cl√© est absente

# Initialiser le client OpenAI
client = OpenAI(
    api_key=api_key,
    base_url="https://generativelanguage.googleapis.com/v1beta/openai/"
)

# Interface Streamlit
st.title("üé¨ Mini-App VO3 avec Opal IA")
st.write("G√©n√®re tes vid√©os VO3 sans limite üöÄ")

# Zone de texte pour le prompt
prompt = st.text_area("üëâ Entre ton id√©e de vid√©o :", "Un tutoriel VO3 de plomberie avec humour...")

# Bouton pour g√©n√©rer la vid√©o
if st.button("G√©n√©rer la vid√©o"):
    if not prompt.strip():
        st.warning("‚ö†Ô∏è Mets un texte avant de g√©n√©rer !")
    else:
        with st.spinner("G√©n√©ration en cours..."):
            try:
                response = client.chat.completions.create(
                    model="gemini-1.5-flash",
                    messages=[{"role": "user", "content": prompt}]
                )
                texte_genere = response.choices[0].message.content
                if texte_genere:
                    st.success("‚úÖ Vid√©o g√©n√©r√©e avec succ√®s !")
                    st.write("**Script g√©n√©r√© :**")
                    st.write(texte_genere)
                else:
                    st.warning("‚ö†Ô∏è Aucun texte g√©n√©r√© !")
            except Exception as e:
                st.error(f"‚ùå Erreur OpenAI : {e}")

